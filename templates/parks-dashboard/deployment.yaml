apiVersion: apps/v1
kind: Deployment
metadata:
  name: parks-dashboard
  annotations:
    app.openshift.io/vcs-ref: main
    app.openshift.io/vcs-uri: 'https://github.com/ultraJeff/parks-dashboard'
  labels:
    app: parks-dashboard
    app.kubernetes.io/name: parks-dashboard
    app.kubernetes.io/component: frontend
    app.openshift.io/runtime: nodejs
    {{- include "parks-app.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: parks-dashboard
      app.kubernetes.io/name: parks-dashboard
  replicas: 1
  template:
    metadata:
      labels:
        name: parks-dashboard
        app.kubernetes.io/name: parks-dashboard
    spec:
      containers:
        - name: parks-dashboard
          envFrom:
          - configMapRef:
              name: {{ .Values.configMap.name }}
          image: quay.io/jefrankl/parks-dashboard:latest
          imagePullPolicy: Always
          ports:
          - containerPort: 9000
            protocol: TCP
            name: http
          resources:
            requests:
              memory: "250Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
          # TODO Build real probes into parks-dashboard
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: 9000
          #   initialDelaySeconds: 3
          #   periodSeconds: 10
          # readinessProbe:
          #     httpGet:
          #       path: /
          #       port: 9000
          #       scheme: HTTP
          #     timeoutSeconds: 1
          #     periodSeconds: 10
          #     successThreshold: 1
          #     failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
